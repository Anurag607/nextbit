import React from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import type { NextPage } from 'next'
import dynamic from 'next/dynamic'
import styles from '../../src/styles/editor.module.scss'
import Nav from '../../src/components/nav'
import parseCookies from '../../src/scripts/cookieParser.mjs'
import Cookie from 'js-cookie'

const CustomEditor = dynamic(()=>import('../../src/components/customEditor'),{ssr:false})

const Editor: NextPage<{userDetails: string, introContent: string, editorContent: string}> = ( {userDetails, introContent, editorContent} ) => {

  const [content,Setcontent] = React.useState((editorContent === '') ? '' : JSON.parse(editorContent))
  const [introData,SetintroData] = React.useState(JSON.parse(introContent))
  const [auth, setAuth] = React.useState(JSON.parse(userDetails))

  const router = useRouter()
  
  const createPost = () => {
    let introData = JSON.parse(introContent)
    let data = {
      user_id: auth._id,
      author: auth.username,
      author_email: auth.email,
      desc: introData.desc,
      title: introData.title,
      content: Cookie.get('content'),
      bgImage: sessionStorage.getItem('bgImageURL'),
      introImage: sessionStorage.getItem('introImageURL')
    }

    console.log(data)
    Cookie.set('currentPost', JSON.stringify(data))

    let status = 201
    fetch(`${process.env.NEXT_PUBLIC_LOCALHOST_SERVER}/api/posts/createPost`, {
      method: "POST",
      mode: "cors",
      headers: {"Content-type": "application/json"},
      body: JSON.stringify(data)
    }).then(response => {
      status = response.status
      console.log(response)
      return response.json()
    }).then(resMessage => {
      if (status == 201) {
        console.log(resMessage)
        Cookie.set('blog', resMessage)
        // router.push(`/blogPage/${resMessage._id}`, `/blogPage/${resMessage._id}`, {shallow: true})
      }
    })
  }

  return (
    <>
      <main className={styles.container}>
        <Head>
          <meta name="description" content="#" />
          <meta name="keywords" content="#" />
          <meta name="author" content="Deep" />
          <meta name="viewport" content="width=device-width, initial-scale=1.0" />  
          <meta name="Blog Generator" content="Generated by create next app" />
          <link rel = "icon" href = "/nb.png" type = "image/x-icon" />
          <title>NextBit</title>
        </Head>
        
        <Nav title='NextBit' auth={userDetails} />

        <div className={styles.main}>
        
          <div className={styles.editor}>
            <CustomEditor setContent={Setcontent} content={content} />
          </div>
          <button className={`${styles.save_btn} save_btn`} onClick={()=>{
            if(auth.hasOwnProperty("username")) {
              createPost()
            } else {
              router.push('/login', '/login', {shallow: true})
            }
          }}>Save</button>

        </div>

      </main>
      
    </>
  )
}

export async function getServerSideProps( {params, req, res} ) {
  const cookies = parseCookies(req)

  if (cookies) {
    return {
      props : {
        userDetails: (typeof cookies.currentLoggedIn !== 'undefined') ? cookies.currentLoggedIn : '{}',
        introContent: (typeof cookies.introContent !== 'undefined') ? cookies.introContent : '{}',
        editorContent: (typeof cookies.content !== 'undefined') ? cookies.content : ''
      }
    }
  } else {
    return {
      redirect: {
        destination: '/nf',
        permanent: false
      }
    }
  }
}

export default Editor